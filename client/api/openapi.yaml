openapi: 3.0.3
info:
  description: |
    API for managing next-gen webspaces.
  title: Netsoc webspaced
  version: 1.0.4
servers:
- url: https://webspaced.netsoc.ie/v1
- url: https://webspaced.staging.netsoc.ie/v1
- url: http://localhost:8081/v1
paths:
  /images:
    get:
      operationId: getImages
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                type: array
          description: An array of images
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      summary: List images
      tags:
      - images
  /webspace/{username}:
    delete:
      operationId: delete
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Destroy webspace
      tags:
      - config
    get:
      description: |
        Retrieve all information about a webspace (except for its current state)
      operationId: get
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webspace'
          description: Webspace information
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Retrieve all webspace information
      tags:
      - config
    post:
      operationId: create
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              simple:
                summary: Simple example with only image
                value:
                  image: alpine
              login:
                summary: More advanced example with root password and SSH key
                value:
                  image: alpine
                  password: hunter2
                  sshKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+kCHXqtznkT9IBN5WxZHmXI97k3BumT+N4lyHWMo0pykpACCOcGw52EXxQveNqgcwcRUgamL9A2JTE//WRf3O4nBofeTRNKcRxTjRoUVIt/F0xbf09yWBqJOXZ8rqLkXhRvSpr1TCUZtYVp5iLtpERp622OMIqHSwa6HlxBqsCFkBeq1bRyNtYK/IaQAuBPW9MNeFriGqA0Vq078ccXp+JINxJbr+ZJybVg6PVqnMD+PgGMZQLkoWjwjH3vcJZZt584UPtrXKpNZuKy6dcMCb2U+O9NOaO66168sBVuK0kZHh51nJ7ZH38VLGiBipRgIQ1fzic3Ncn6GC9ko3/OwT
            schema:
              $ref: '#/components/schemas/InitRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webspace'
          description: New webspace information
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation error (e.g. Required field missing)
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Webspace for username already exists / is already running
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Initialize webspace
      tags:
      - config
  /webspace/{username}/config:
    get:
      operationId: getConfig
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
          description: Webspace configuration
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Retrieve webspace configuration
      tags:
      - config
    patch:
      operationId: updateConfig
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
          description: Old config values
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation error (e.g. Required field missing)
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Change webspace config options
      tags:
      - config
  /webspace/{username}/state:
    delete:
      operationId: shutdown
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Shut down webspace container
      tags:
      - state
    get:
      description: |
        Retrieve webspace state
      operationId: getState
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                running:
                  description: Running
                  value:
                    running: true
                    uptime: 32
                    usage:
                      cpu: 685502875
                      disks: {}
                      memory: 10452992
                      processes: 8
                    networkInterfaces:
                      eth0:
                        mac: 00:16:3e:34:9a:d4
                        mtu: 1500
                        state: up
                        counters:
                          bytesReceived: 46897
                          bytesSent: 9910
                          packetsReceived: 122
                          packetsSent: 46
                        addresses:
                        - family: inet
                          address: 10.233.0.143
                          netmask: "24"
                          scope: global
                        - family: inet6
                          address: fd42:7373:3d88:e37a:216:3eff:fe34:9ad4
                          netmask: "64"
                          scope: global
                        - family: inet6
                          address: fe80::216:3eff:fe34:9ad4
                          netmask: "64"
                          scope: link
                notRunning:
                  description: Not running
                  value:
                    running: false
                    uptime: 0
                    usage:
                      cpu: 0
                      disks: {}
                      memory: 0
                      processes: 0
                    networkInterfaces: {}
              schema:
                $ref: '#/components/schemas/State'
          description: Webspace state
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Retrieve webspace state
      tags:
      - state
    patch:
      description: Forces a reload of reverse proxy and port forwarding configuration
      operationId: sync
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Re-generate webspace backend config
      tags:
      - state
    post:
      operationId: start
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Webspace for username already exists / is already running
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Start webspace container
      tags:
      - state
    put:
      operationId: reboot
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Reboot webspace container
      tags:
      - state
  /webspace/{username}/domains:
    get:
      operationId: getDomains
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domains'
          description: Webspace domains
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Retrieve webspace domains
      tags:
      - domains
  /webspace/{username}/domains/{domain}:
    delete:
      operationId: removeDomain
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          $ref: '#/components/schemas/Domain'
        style: simple
      responses:
        "204":
          description: No content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation error (e.g. Required field missing)
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Delete custom domain
      tags:
      - domains
    post:
      description: |
        Domain will be verified by looking for a `TXT` record of the format `webspace:id:<user id>`
      operationId: addDomain
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          $ref: '#/components/schemas/Domain'
        style: simple
      responses:
        "201":
          description: No content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation error (e.g. Required field missing)
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Webspace for username already exists / is already running
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Add custom domain
      tags:
      - domains
  /webspace/{username}/ports:
    get:
      operationId: getPorts
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ports'
          description: Webspace port forwards
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Retrieve webspace port forwards
      tags:
      - ports
  /webspace/{username}/ports/{ePort}/{iPort}:
    post:
      operationId: addPort
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      - explode: false
        in: path
        name: ePort
        required: true
        schema:
          $ref: '#/components/schemas/Port'
        style: simple
      - explode: false
        in: path
        name: iPort
        required: true
        schema:
          $ref: '#/components/schemas/Port'
        style: simple
      responses:
        "201":
          description: No content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation error (e.g. Required field missing)
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Webspace for username already exists / is already running
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Add port forward
      tags:
      - ports
  /webspace/{username}/ports/{iPort}:
    post:
      description: Add port forward from random free port to internal port
      operationId: addRandomPort
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      - explode: false
        in: path
        name: iPort
        required: true
        schema:
          $ref: '#/components/schemas/Port'
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddRandomPortResponse'
          description: Random external port
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation error (e.g. Required field missing)
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Webspace for username already exists / is already running
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Add random port forward
      tags:
      - ports
  /webspace/{username}/ports/{ePort}:
    delete:
      operationId: removePort
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      - explode: false
        in: path
        name: ePort
        required: true
        schema:
          $ref: '#/components/schemas/Port'
        style: simple
      responses:
        "204":
          description: No content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation error (e.g. Required field missing)
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Delete port forward
      tags:
      - ports
  /webspace/{username}/console:
    delete:
      operationId: clearLog
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Clear webspace console log
      tags:
      - console
    get:
      operationId: getLog
      parameters:
      - description: |
          User's username. Can be `self` to indicate the currently authenticated user.
        example: root
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Console log
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authorization error (e.g. incorret password, invalid token,
            token expired etc.)
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Admin token is required
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist (e.g. user, webspace)
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General server error
      security:
      - jwt: []
      - jwt_admin: []
      summary: Retrieve webspace console log
      tags:
      - console
components:
  parameters:
    Domain:
      explode: false
      in: path
      name: domain
      required: true
      schema:
        $ref: '#/components/schemas/Domain'
      style: simple
    ExternalPort:
      explode: false
      in: path
      name: ePort
      required: true
      schema:
        $ref: '#/components/schemas/Port'
      style: simple
    InternalPort:
      explode: false
      in: path
      name: iPort
      required: true
      schema:
        $ref: '#/components/schemas/Port'
      style: simple
  responses:
    InternalError:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: General server error
    NotFoundError:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Resource does not exist (e.g. user, webspace)
    ValidationError:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Validation error (e.g. Required field missing)
    ConflictError:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Webspace for username already exists / is already running
  schemas:
    Error:
      properties:
        message:
          description: Message explaining the error
          type: string
      required:
      - message
      type: object
    ImageAlias:
      description: LXD image alias
      example:
        name: alpine
        description: Alpine 3.11 amd64 (20201004_13:00)
      properties:
        name:
          example: alpine
          type: string
        description:
          example: Alpine 3.11 amd64 (20201004_13:00)
          type: string
      type: object
    Image:
      description: |
        LXD image (summarised version of https://linuxcontainers.org/lxd/docs/master/rest-api#10imagesfingerprint)
      example:
        aliases:
        - name: alpine
          description: Alpine 3.11 amd64 (20201004_13:00)
        - name: alpine
          description: Alpine 3.11 amd64 (20201004_13:00)
        size: 2528108
        fingerprint: 49189fc1b5e04a3e26ee17ad22188f397fbdb073bbbdd2c0371ddf98dbd6b81c
        properties:
          architecture: amd64
          description: Alpine 3.11 amd64 (20201004_13:00)
          os: Alpine
          release: "3.11"
          serial: 20201004_13:00
          type: squashfs
      properties:
        aliases:
          items:
            $ref: '#/components/schemas/ImageAlias'
          type: array
        fingerprint:
          description: SHA-256 hash of the image
          example: 49189fc1b5e04a3e26ee17ad22188f397fbdb073bbbdd2c0371ddf98dbd6b81c
          type: string
        properties:
          additionalProperties:
            type: string
          description: Arbitrary properties
          example:
            architecture: amd64
            description: Alpine 3.11 amd64 (20201004_13:00)
            os: Alpine
            release: "3.11"
            serial: 20201004_13:00
            type: squashfs
          type: object
        size:
          description: Size in bytes
          example: 2528108
          format: int64
          type: integer
      required:
      - aliases
      - fingerprint
      - properties
      - size
      type: object
    Config:
      description: Webspace configuration
      example:
        httpPort: 8080
        sniPassthrough: false
        startupDelay: 5.0
      properties:
        startupDelay:
          default: 3.0
          description: |
            How many seconds to delay incoming connections to a webspace while starting the container
          example: 5.0
          format: double
          type: number
        httpPort:
          default: 80
          description: |
            Incoming SSL-terminated HTTP requests (and SNI passthrough HTTPS connections) will be forwarded to this port
          example: 8080
          format: int32
          type: integer
        sniPassthrough:
          default: false
          description: |
            If true, SSL termination will be disabled and HTTPS connections will forwarded directly
          type: boolean
      type: object
    Domain:
      description: Custom domain
      example: example.com
      type: string
    Domains:
      description: List of webspace custom domains
      items:
        $ref: '#/components/schemas/Domain'
      type: array
    Port:
      description: Network port
      example: 8080
      format: int32
      type: integer
    Ports:
      additionalProperties:
        $ref: '#/components/schemas/Port'
      description: Mapping of external ports to internal container ports (port forwarding)
      example:
        "60022": 22
        "55565": 25565
      type: object
    Webspace:
      description: Netsoc webspace object
      example:
        domains:
        - example.com
        - example.com
        ports:
          "60022": 22
          "55565": 25565
        user: 1
        config:
          httpPort: 8080
          sniPassthrough: false
          startupDelay: 5.0
      properties:
        user:
          description: Unique database identifier, not modifiable.
          example: 1
          format: int32
          type: integer
        config:
          $ref: '#/components/schemas/Config'
        domains:
          description: List of webspace custom domains
          items:
            $ref: '#/components/schemas/Domain'
          type: array
        ports:
          additionalProperties:
            $ref: '#/components/schemas/Port'
          description: Mapping of external ports to internal container ports (port
            forwarding)
          example:
            "60022": 22
            "55565": 25565
          type: object
      type: object
    Usage:
      description: Website resource usage
      example:
        processes: 8
        memory: 10452992
        disks:
          root: 16777216
        cpu: 685502875
      properties:
        cpu:
          description: CPU time (nanoseconds)
          example: 685502875
          format: int64
          type: integer
        disks:
          additionalProperties:
            description: Disk usage in bytes
            format: int64
            type: integer
          example:
            root: 16777216
          type: object
        memory:
          description: Memory usage in bytes
          example: 10452992
          format: int64
          type: integer
        processes:
          description: Number of processes
          example: 8
          format: int64
          type: integer
      required:
      - cpu
      - disks
      - memory
      - processes
      type: object
    InterfaceCounters:
      description: Counters for a network interface
      properties:
        bytesReceived:
          example: 46897
          format: int64
          type: integer
        bytesSent:
          example: 9910
          format: int64
          type: integer
        packetsReceived:
          example: 122
          format: int64
          type: integer
        packetsSent:
          example: 46
          format: int64
          type: integer
      required:
      - bytesReceived
      - bytesSent
      - packetsReceived
      - packetsSent
      type: object
    InterfaceAddress:
      description: Network interface address
      properties:
        family:
          default: inet
          type: string
        address:
          example: 10.233.0.143
          type: string
        netmask:
          example: "24"
          type: string
        scope:
          example: global
          type: string
      required:
      - address
      - family
      - netmask
      type: object
    NetworkInterface:
      description: Webspace network interface status
      properties:
        mac:
          description: MAC address
          example: 00:16:3e:34:9a:d4
          type: string
        mtu:
          default: 1500
          type: integer
        state:
          default: up
          type: string
        counters:
          $ref: '#/components/schemas/InterfaceCounters'
        addresses:
          items:
            $ref: '#/components/schemas/InterfaceAddress'
          type: array
      required:
      - addresses
      - counters
      - mac
      - mtu
      - state
      type: object
    State:
      description: Webspace state
      example:
        running: true
        networkInterfaces:
          eth0:
            mac: 00:16:3e:34:9a:d4
            mtu: 1500
            state: up
            counters:
              bytesReceived: 46897
              bytesSent: 9910
              packetsReceived: 122
              packetsSent: 46
            addresses:
            - family: inet
              address: 10.233.0.143
              netmask: "24"
              scope: global
            - family: inet6
              address: fd42:7373:3d88:e37a:216:3eff:fe34:9ad4
              netmask: "64"
              scope: global
            - family: inet6
              address: fe80::216:3eff:fe34:9ad4
              netmask: "64"
              scope: link
        usage:
          processes: 8
          memory: 10452992
          disks:
            root: 16777216
          cpu: 685502875
        uptime: 0.8008281904610115
      properties:
        running:
          default: false
          example: true
          type: boolean
        uptime:
          description: Length of time for which container has been running (seconds)
          format: double
          type: number
        usage:
          $ref: '#/components/schemas/Usage'
        networkInterfaces:
          additionalProperties:
            $ref: '#/components/schemas/NetworkInterface'
          example:
            eth0:
              mac: 00:16:3e:34:9a:d4
              mtu: 1500
              state: up
              counters:
                bytesReceived: 46897
                bytesSent: 9910
                packetsReceived: 122
                packetsSent: 46
              addresses:
              - family: inet
                address: 10.233.0.143
                netmask: "24"
                scope: global
              - family: inet6
                address: fd42:7373:3d88:e37a:216:3eff:fe34:9ad4
                netmask: "64"
                scope: global
              - family: inet6
                address: fe80::216:3eff:fe34:9ad4
                netmask: "64"
                scope: link
          type: object
      required:
      - networkInterfaces
      - running
      - uptime
      - usage
      type: object
    InitRequest:
      example:
        image: alpine
        password: hunter2
        sshKey: sshKey
      properties:
        image:
          description: Image alias or fingerprint
          example: alpine
          type: string
        password:
          description: Password for root user
          example: hunter2
          type: string
        sshKey:
          description: SSH key for root user
          type: string
      required:
      - image
      type: object
    AddRandomPortResponse:
      example:
        ePort: 8080
      properties:
        ePort:
          description: Network port
          example: 8080
          format: int32
          type: integer
      required:
      - ePort
      type: object
    UserID:
      description: Unique database identifier, not modifiable.
      example: 1
      format: int32
      type: integer
  securitySchemes:
    jwt:
      bearerFormat: jwt
      description: Any user JWT (including non-admin and expired)
      scheme: bearer
      type: http
    jwt_admin:
      bearerFormat: jwt
      description: Valid admin JWT
      scheme: bearer
      type: http
